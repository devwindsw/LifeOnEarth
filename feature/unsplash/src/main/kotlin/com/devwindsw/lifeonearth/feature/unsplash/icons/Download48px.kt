/*
 * Copyright 2024 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.devwindsw.lifeonearth.feature.unsplash.icons
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.graphics.PathFillType.Companion.NonZero
import androidx.compose.ui.graphics.SolidColor
import androidx.compose.ui.graphics.StrokeCap.Companion.Butt
import androidx.compose.ui.graphics.StrokeJoin.Companion.Miter
import androidx.compose.ui.graphics.vector.ImageVector
import androidx.compose.ui.graphics.vector.ImageVector.Builder
import androidx.compose.ui.graphics.vector.path
import androidx.compose.ui.unit.dp
import com.devwindsw.lifeonearth.feature.unsplash.icons.UnsplashIcons

// Source from https://fonts.google.com/icons
// Generated by "Svg to Compose" of Pavel Shurmilov
public val UnsplashIcons.Download48px: ImageVector
    get() {
        if (_download48px != null) {
            return _download48px!!
        }
        _download48px = Builder(name = "Download48px", defaultWidth = 48.0.dp, defaultHeight =
                48.0.dp, viewportWidth = 960.0f, viewportHeight = 960.0f).apply {
            path(fill = SolidColor(Color(0xFF000000)), stroke = null, strokeLineWidth = 0.0f,
                    strokeLineCap = Butt, strokeLineJoin = Miter, strokeLineMiter = 4.0f,
                    pathFillType = NonZero) {
                moveTo(480.0f, 647.0f)
                lineTo(287.0f, 454.0f)
                lineTo(330.0f, 411.0f)
                lineTo(450.0f, 531.0f)
                lineTo(450.0f, 160.0f)
                lineTo(510.0f, 160.0f)
                lineTo(510.0f, 531.0f)
                lineTo(630.0f, 411.0f)
                lineTo(673.0f, 454.0f)
                lineTo(480.0f, 647.0f)
                close()
                moveTo(220.0f, 800.0f)
                quadTo(196.0f, 800.0f, 178.0f, 782.0f)
                quadTo(160.0f, 764.0f, 160.0f, 740.0f)
                lineTo(160.0f, 597.0f)
                lineTo(220.0f, 597.0f)
                lineTo(220.0f, 740.0f)
                quadTo(220.0f, 740.0f, 220.0f, 740.0f)
                quadTo(220.0f, 740.0f, 220.0f, 740.0f)
                lineTo(740.0f, 740.0f)
                quadTo(740.0f, 740.0f, 740.0f, 740.0f)
                quadTo(740.0f, 740.0f, 740.0f, 740.0f)
                lineTo(740.0f, 597.0f)
                lineTo(800.0f, 597.0f)
                lineTo(800.0f, 740.0f)
                quadTo(800.0f, 764.0f, 782.0f, 782.0f)
                quadTo(764.0f, 800.0f, 740.0f, 800.0f)
                lineTo(220.0f, 800.0f)
                close()
            }
        }
        .build()
        return _download48px!!
    }

private var _download48px: ImageVector? = null
